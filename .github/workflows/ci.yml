name: Laravel CI with SonarCloud

on:
  push:
    branches:
      - '**'  # For all branches (including main, develop, feature/*, etc.)
  pull_request:
    branches:
      - '**'  # For pull requests targeting any branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fix Case Sensitivity Issues
        run: |
          git ls-files | grep -i 'app/Helper/helpers.php' || echo "File not found in Git index!"
      
      - name: Check if helpers.php exists
        run: ls -lah app/Helper/

      - name: Fix Permissions
        run: chmod 644 app/Helper/helpers.php

      - name: Clear Composer Cache
        run: composer clear-cache

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction
          composer dump-autoload --optimize

      - name: Dump autoload
        run: composer dump-autoload --optimize

      - name: Run migrations
        run: php artisan migrate --force

      - name: Setup Laravel Environment
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Fix PHPUnit Permissions
        run: chmod +x vendor/bin/phpunit

      - name: Run PHPUnit Tests with Coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Verify Coverage File
        run: |
          if [ ! -f coverage.xml ]; then
            echo "Coverage file missing!" && exit 1
          fi

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=Learnathon-By-Geeky-Solutions_php-pulse
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.php.version=8.2

  post-analysis:
    name: Post Analysis
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
      - name: Cleanup Temporary Files
        run: |
          echo "Cleaning up temporary files"
          rm -f coverage.xml
