name: Laravel CI with SonarCloud

on:
  push:
    branches:
      - '**'  # Run on all branches
  pull_request:
    branches:
      - '**'  # Run on all PRs

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ecommerce
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up .env for Database
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=ecommerce" >> .env
          echo "DB_USERNAME=test_user" >> .env
          echo "DB_PASSWORD=test_pass" >> .env

      - name: Install PHP & Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql, xml
          coverage: xdebug

      - name: Install Dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction
          composer dump-autoload --optimize

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Run Tests and Generate Coverage
        run: |
          mkdir -p tests/reports
          XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.php.version=8.2

  post-analysis:
    name: Post Analysis
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Cleanup Temporary Files
        run: |
          echo "Cleaning up temporary files"
          rm -f coverage.xml
