name: Laravel CI with SonarCloud

on:
  push:
    branches:
      - '**'  # For all branches (including main, develop, feature/*, etc.)
  pull_request:
    branches:
      - '**'  # For pull requests targeting any branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ecommerce # Set to your correct database name (e.g., ecommerce)
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_pass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          until mysqladmin ping -h 127.0.0.1 -u test_user --password=test_pass --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done
          echo "MySQL is up and running!"

      - name: Create database (if not exists)
        run: |
          echo "Creating the database if not exists..."
          mysql -h 127.0.0.1 -u test_user --password=test_pass -e "CREATE DATABASE IF NOT EXISTS ecommerce;" # Make sure the db name is correct

      - name: Fix Case Sensitivity Issues
        run: |
          git ls-files | grep -i 'app/Helper/helpers.php' || echo "File not found in Git index!"

      - name: Check if helpers.php exists
        run: ls -lah app/Helper/

      - name: Fix Permissions
        run: chmod 644 app/Helper/helpers.php

      - name: Clear Composer Cache
        run: composer clear-cache

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction
          composer dump-autoload --optimize

      - name: Setup Laravel Environment
        run: cp .env.example .env

      - name: Update .env for MySQL Connection
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=ecommerce" >> .env # Ensure this matches the database name
          echo "DB_USERNAME=test_user" >> .env
          echo "DB_PASSWORD=test_pass" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Check Laravel Database Connection
        run: php artisan migrate:status || echo "Database connection failed!"

      - name: Run migrations
        run: php artisan migrate --force

      - name: Fix PHPUnit Permissions
        run: chmod +x vendor/bin/phpunit

      - name: Run PHPUnit Tests with Coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Verify Coverage File
        run: |
          if [ ! -f coverage.xml ]; then
            echo "Coverage file missing!" && exit 1
          fi

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.projectKey=Learnathon-By-Geeky-Solutions_php-pulse
            -Dsonar.php.coverage.reportPaths=coverage.xml
            -Dsonar.php.version=8.2

  post-analysis:
    name: Post Analysis
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Cleanup Temporary Files
        run: |
          echo "Cleaning up temporary files"
          rm -f coverage.xml
